{"version":3,"sources":["Dice.js","DiceComponent.js","DiceList.js","App.js","reportWebVitals.js","index.js"],"names":["Dice","color","value","this","faces","id","_generateId","isSelected","_count","a","b","evalColor","col","Error","ev","Math","ceil","random","DiceComponent","props","attributes","dice","className","onClick","DiceList","items","diceList","list","map","x","onDiceClick","Buttons","addDice","disabled","length","removeDice","App","state","listBlue","Array","listRed","listGreen","listReroll","rerollStyle","visibility","selectDice","roll","deselectDice","reroll","style","coloredList","len","newState","newList","slice","push","Object","assign","alert","setState","console","log","pop","lists","sort","compare","diceCopy","found","d","filter","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83c8559b.chunk.js","sourcesContent":["class Dice {\r\n\r\n    static _count = 0;\r\n    static _generateId() {\r\n        Dice._count++\r\n        return Dice._count - 1\r\n    }\r\n    static compare(a, b) {\r\n        let evalColor = (col) => {\r\n            switch (col) {\r\n                case 'blue':\r\n                    return 0\r\n                case 'red':\r\n                    return 1\r\n                case 'green':\r\n                    return 2\r\n                default:\r\n                    throw new Error(\"Die has no color!\")\r\n            }\r\n        }\r\n\r\n        let ev = evalColor(a.color) - evalColor(b.color)\r\n        if (ev === 0) return (b.value - a.value)\r\n        else return ev\r\n    }\r\n\r\n    constructor(color, value = 0) {\r\n        this.color = color\r\n        this.value = value\r\n        this.faces = 8\r\n        this.id = Dice._generateId()\r\n        this.isSelected = false\r\n    }\r\n\r\n    roll() {\r\n        let value = Math.ceil( Math.random() * this.faces )\r\n        this.value = value\r\n    }\r\n}\r\n\r\nexport default Dice ","import React from \"react\"\r\nimport \"./DiceComponent.css\"\r\n\r\nfunction DiceComponent(props) {\r\n    let attributes = ' ' + props.dice.color\r\n    if (props.dice.isSelected) {\r\n        attributes += ' disabled'\r\n    }\r\n\r\n    return (\r\n        <div className={\"Dice\" + attributes} onClick={()=> props.onClick()}>\r\n            {props.dice.value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiceComponent","import React from \"react\"\r\nimport DiceComponent from \"./DiceComponent\"\r\nimport './DiceList.css'\r\n\r\nfunction DiceList(props) {\r\n\r\n    let color = \"\"\r\n    if ('color' in props.items) color += \" \" + (props.items.color)\r\n\r\n    const diceList = props.items.list.map((x) =>\r\n        <li key={x.id}>\r\n            <DiceComponent dice={x} onClick={() => props.onDiceClick(x)}/>\r\n        </li>\r\n    )\r\n\r\n    function Buttons() {\r\n        if ('color' in props.items) {\r\n            return (\r\n                <div className=\"DiceList-buttons\">\r\n                    <button onClick={() => props.addDice()} disabled={props.items.list.length === 7}> + </button>\r\n                    <button onClick={() => props.removeDice()} disabled={props.items.list.length === 0}> - </button>\r\n                </div>\r\n            )\r\n        }\r\n        else return null\r\n    }\r\n\r\n    return (\r\n        <div className={\"DiceList\" + color}>\r\n            <Buttons/>\r\n            <ul>{diceList}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiceList","import './App.css';\r\nimport React from 'react'\r\nimport Dice from \"./Dice\"\r\nimport DiceList from './DiceList'\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            listBlue: { list: Array(0), color: 'blue' },\r\n            listRed: { list: Array(0), color: 'red' },\r\n            listGreen: { list: Array(0), color: 'green' },\r\n            listReroll: { list: Array(0) }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rerollStyle = {visibility: 'visible'}\r\n        if (this.state.listReroll.list.length === 0) {\r\n            rerollStyle = {visibility: 'hidden'}\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App-page\">\r\n                    <DiceList\r\n                        items={this.state.listBlue}\r\n                        addDice={() => this.addDice(this.state.listBlue)}\r\n                        removeDice={() => this.removeDice(this.state.listBlue)}\r\n                        onDiceClick={(dice) => this.selectDice(dice)}\r\n                    />\r\n                    <DiceList\r\n                        items={this.state.listRed}\r\n                        addDice={() => this.addDice(this.state.listRed)}\r\n                        removeDice={() => this.removeDice(this.state.listRed)}\r\n                        onDiceClick={(dice) => this.selectDice(dice)}\r\n                    />\r\n                    <DiceList\r\n                        items={this.state.listGreen}\r\n                        addDice={() => this.addDice(this.state.listGreen)}\r\n                        removeDice={() => this.removeDice(this.state.listGreen)}\r\n                        onDiceClick={(dice) => this.selectDice(dice)}\r\n                    />\r\n                    <button id=\"roll\" onClick={ () => this.roll()}> Tira i dadi </button>\r\n                    <DiceList\r\n                        items={this.state.listReroll}\r\n                        onDiceClick={(dice) => this.deselectDice(dice)}\r\n                    />\r\n                    <button id=\"roll\" onClick={ () => this.reroll()} style={rerollStyle}> Nuovo Tiro </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    addDice(coloredList) {\r\n        let len = coloredList.list.length\r\n        if (len === 7) {\r\n            console.log(\"lista piena!\")\r\n            return\r\n        }\r\n        const newList = {list: coloredList.list.slice(), color: coloredList.color}\r\n        newList.list.push(new Dice(newList.color, len+1))\r\n        let newState\r\n        switch (coloredList.color) {\r\n            case 'blue':\r\n                newState = Object.assign({}, this.state, {listBlue: newList})\r\n                break;\r\n            case 'red':\r\n                newState = Object.assign({}, this.state, {listRed: newList})\r\n                break;\r\n            case 'green':\r\n                newState = Object.assign({}, this.state, {listGreen: newList})\r\n                break;\r\n            default:\r\n                alert(\"not colored lists are not implemented\")\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    removeDice(coloredList) {\r\n        let len = coloredList.list.length\r\n        if (len === 0) {\r\n            console.log(\"lista vuota!\")\r\n            return\r\n        }\r\n        const newList = {list: coloredList.list.slice(), color: coloredList.color}\r\n        newList.list.pop()\r\n        let newState\r\n        switch (coloredList.color) {\r\n            case 'blue':\r\n                newState = Object.assign({}, this.state, {listBlue: newList})\r\n                break;\r\n            case 'red':\r\n                newState = Object.assign({}, this.state, {listRed: newList})\r\n                break;\r\n            case 'green':\r\n                newState = Object.assign({}, this.state, {listGreen: newList})\r\n                break;\r\n            default:\r\n                alert(\"not colored lists are not implemented\")\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    roll() {\r\n        let lists = [\r\n            this.state.listBlue.list.slice(), \r\n            this.state.listRed.list.slice(),\r\n            this.state.listGreen.list.slice()\r\n        ]\r\n        for (let list of lists) {\r\n            for (let dice of list) {\r\n                dice.roll()\r\n                dice.isSelected = false \r\n            }\r\n\r\n            //SORTING FOR EASIER UNDERSTANDING\r\n            list.sort( (a, b) => b.value - a.value )\r\n        }\r\n        let newState = Object.assign({}, this.state)\r\n        newState.listBlue.list = lists[0]\r\n        newState.listRed.list = lists[1]\r\n        newState.listGreen.list = lists[2]\r\n        newState.listReroll.list = Array(0)\r\n        \r\n        this.setState(newState)\r\n\r\n    }\r\n\r\n    reroll() {\r\n        let list = this.state.listReroll.list.slice()\r\n        console.log(list)\r\n        for (let dice of list) {\r\n            dice.roll()\r\n        }\r\n\r\n        list.sort( Dice.compare )\r\n\r\n        let newState = Object.assign({}, this.state)\r\n        newState.listReroll.list = list\r\n        this.setState(newState)\r\n    }\r\n\r\n    selectDice(dice) {\r\n        if (dice.isSelected) {\r\n            return\r\n        }\r\n        let diceCopy = Object.assign(new Dice(), dice)\r\n        let list = this.state.listReroll.list.slice()\r\n        list.push(diceCopy)\r\n        list.sort( Dice.compare )\r\n        \r\n        dice.isSelected = true\r\n\r\n        let newState = Object.assign({}, this.state)\r\n        newState.listReroll.list = list\r\n        this.setState(newState)\r\n    }\r\n\r\n    deselectDice(dice) {\r\n        let found = false\r\n        let lists = [\r\n            this.state.listBlue.list.slice(), \r\n            this.state.listRed.list.slice(),\r\n            this.state.listGreen.list.slice()\r\n        ]\r\n        for (let list of lists) {\r\n            for (let d of list) {\r\n                if (d.id === dice.id) {\r\n                    found = true\r\n                    if (!d.isSelected) alert(\"Il programmatore non è capace pt2 :'(\")\r\n                    d.isSelected = false\r\n                }\r\n            }\r\n        }\r\n        if (!found) alert(\"Il programmatore non è capace :'(\")\r\n\r\n        let list = this.state.listReroll.list.filter((d)=> d !== dice)\r\n\r\n        let newState = Object.assign({}, this.state)\r\n        newState.listReroll.list = list\r\n        this.setState(newState)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}